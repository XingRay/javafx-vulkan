/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application

    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
//    alias(libs.plugins.jvm)
    kotlin("jvm")


    id("java")

    // javafx 插件
    // https://plugins.gradle.org/plugin/org.openjfx.javafxplugin
    id("org.openjfx.javafxplugin")

    // shadow插件, 将应用打包成一个 flatJar, 可以通过 java -jar app.jar 执行
    // https://plugins.gradle.org/plugin/com.github.johnrengelman.shadow
    id("com.github.johnrengelman.shadow")
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()

    mavenLocal {
        val mavenLocalRepository = properties["maven.local.repository"]
        url = uri("file:///${mavenLocalRepository}")
    }

    maven("https://maven.pkg.jetbrains.space/public/p/compose/dev")
}

dependencies {
    // Use the Kotlin JUnit 5 integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")

    // Use the JUnit 5 integration.
    testImplementation(libs.junit.jupiter.engine)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)

    // javafx
    implementation(libs.javafx.base)
    implementation(libs.javafx.graphics)
    implementation(libs.javafx.controls)
    implementation(libs.javafx.fxml)
//    implementation(libs.javafx.swing)

    implementation(libs.xingray.java.config)
    implementation(libs.xingray.java.util)
    implementation(libs.xingray.javafx.base)

    implementation("io.github.mkpaz:atlantafx-base:2.0.1")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "com.github.xingray.App"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
